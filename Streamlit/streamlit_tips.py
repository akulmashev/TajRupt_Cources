import streamlit as st
import plotly.express as px
import pandas as pd
import plotly.graph_objects as go
from plotly.subplots import make_subplots
import numpy as np
import streamlit as st
import json
#pip install streamlit-lottie
from streamlit_lottie import st_lottie

if 'name' not in st.session_state:
    st.session_state.name = "–¢–µ–º–Ω–∞—è —Ç–µ–º–∞"
    st.session_state.val = True
    st._config.set_option("theme.base", "dark")


toggle_dark = st.toggle(st.session_state.name, value=st.session_state.val)

if st.get_option("theme.base") == "light" and toggle_dark:
    st._config.set_option("theme.base", "dark")
    st.session_state.name = "–¢–µ–º–Ω–∞—è —Ç–µ–º–∞"
    st.session_state.val = True
    st.rerun()
elif st.get_option("theme.base") == "dark" and not toggle_dark:
    st._config.set_option("theme.base", "light")
    st.session_state.name = "–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞"
    st.session_state.val = False
    st.rerun()

df = px.data.tips()
df2 = pd.DataFrame(df)
col1, mid, col2 = st.columns([20,1,15])
with col1:
    #st.title("–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö —á–∞–µ–≤—ã—Ö")
    st.markdown("<h1 style='text-align: center;'>–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö —á–∞–µ–≤—ã—Ö</h1>", unsafe_allow_html=True)
    st.html("<p style='color: black'><u>–§—Ä–µ–π–º–≤–æ—Ä–∫</u>: streamlit;<br><u>–ë–∏–±–ª–∏–æ—Ç–µ–∫–∏</u>: plotly, pandas, numpy, json, streamlit_lottie</p>")

    #st.header("–ü—Ä–∏–º–µ—Ä –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
with col2:
    with open("Man.json", "r") as f:
        data = json.load(f)
    st_lottie(data,
		# change the direction of our animation
		reverse=True,
		# height and width of animation
		height=250,
		width=250,
		# speed of animation
		speed=1,
		# means the animation will run forever like a gif, and not as a still image
		loop=True,
		# quality of elements used in the animation, other values are "low" and "medium"
		quality='high',
		# THis is just to uniquely identify the animation
		key='Man'
		)

if st.checkbox("–ü–æ–∫–∞–∑–∞—Ç—å/–°–∫—Ä—ã—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ."):
    st.write("–ì—Ä–∞–¥–∏–µ–Ω—Ç —Ü–≤–µ—Ç–æ–≤, –æ—Ç –º–µ–Ω—å—à–µ–≥–æ –∫ –±–æ–ª—å—à–µ–º—É –∑–Ω–∞—á–µ–Ω–∏—é, –ø–æ –ø–æ–ª—é total_bill.")
    st.dataframe(df.style.background_gradient(axis=0, gmap=df.total_bill, cmap='ocean_r'))

tab_titles = ["üóÑÔ∏è–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö", "üèÅ–ö–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞",
              "üìà‚Ññ1", "‚ú®‚Ññ 2", "üìä‚Ññ 3", "üìä‚Ññ 4", "„ÄΩÔ∏è‚Ññ 5", "üíø‚Ññ 6"]
tab1, tab2, tab3, tab4, tab5, tab6, tab7, tab8 = st.tabs(tab_titles)

with tab1:
    st.html(f"<h2>–ù–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ª–µ–¥—É—é—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã:<h2>"
            f"<ul><li><u>total_bill</u>: –û–±—â–∏–π —Å—á—ë—Ç (–≤ –¥–æ–ª–ª–∞—Ä–∞—Ö).</li>"
            f"<li><u>tip</u>: –†–∞–∑–º–µ—Ä —á–∞–µ–≤—ã—Ö (–≤ –¥–æ–ª–ª–∞—Ä–∞—Ö).</li>"
            f"<li><u>sex</u>: –ü–æ–ª –∫–ª–∏–µ–Ω—Ç–∞ (Male/Female).</li>"
            f"<li><u>smoker</u>: –ë—ã–ª –ª–∏ –∫–ª–∏–µ–Ω—Ç –∫—É—Ä—è—â–∏–º (Yes/No).</li>"
            f"<li><u>day</u>: –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏ (Thu, Fri, Sat, Sun).</li>"
            f"<li><u>time</u>: –í—Ä–µ–º—è –ø–æ—Å–µ—â–µ–Ω–∏—è (Lunch/Dinner).</li>"
            f"<li><u>size</u>: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫ –∑–∞ —Å—Ç–æ–ª–æ–º.</li>")
    st.html(
        f"–ö–æ–ª-–≤–æ —Å—Ç—Ä–æ–∫ –≤ –±–∞–∑–µ Tips - <span style='color: green;'><i><u>{df.shape[0]}</u></i></span>")

    st.html(f"–ñ–µ–Ω—â–∏–Ω - <span style='color: deeppink;'>{df[df['sex'] == 'Female']['sex'].count()}</span>, "
            f"–∏–∑ –Ω–∏—Ö –∫—É—Ä—è—Ç - <span style='color: red;'>{df[(df['sex'] == 'Female') & (df['smoker'] == "Yes")]['sex'].count()}</span>. "
            f"–û–±—â–∞—è —Å—É–º–º–∞ —á–∞–µ–≤—ã—Ö - <span style='color: yellow;'>{df[df['sex'] == 'Female']['tip'].sum().round(2)}$</span>. "
            f"–û–±—â–∏–µ —Ç—Ä–∞—Ç—ã - <span style='color: green;'>{df[df['sex'] == 'Female']['total_bill'].sum().round(2)}$</span>.")

    st.html(f"–ú—É–∂—á–∏–Ω - <span style='color: blue;'>{df[df['sex'] == 'Male']['sex'].count()}</span>, "
            f"–∏–∑ –Ω–∏—Ö –∫—É—Ä—è—Ç - <span style='color: red;'>{df[(df['sex'] == 'Male') & (df['smoker'] == "Yes")]['sex'].count()}</span>. "
            f"–û–±—â–∞—è —Å—É–º–º–∞ —á–∞–µ–≤—ã—Ö - <span style='color: yellow;'>{df[df['sex'] == 'Male']['tip'].sum().round(2)}$</span>. "
            f"–û–±—â–∏–µ —Ç—Ä–∞—Ç—ã - <span style='color: green;'>{df[df['sex'] == 'Male']['total_bill'].sum().round(2)}$</span>.")
    st.html(
        f"–ö–æ–ª-–≤–æ –ø—É—Å—Ç—ã—Ö –ø–æ–ª–µ–π –≤ –±–∞–∑–µ - <span style='color: green;'>{df.isnull().sum()[0]}</span>.")

    st.dataframe(df.describe(include='all'), height=400)
with tab2:
    tips_numeric = df.copy()
    for col in tips_numeric.select_dtypes(include=['category', 'object']).columns:
        tips_numeric[col] = tips_numeric[col].astype('category').cat.codes

    # Compute the correlation matrix
    corr_matrix = tips_numeric.corr()

    # Create the heatmap using Plotly
    fig = go.Figure(data=go.Heatmap(
        z=corr_matrix.values,
        x=corr_matrix.columns,
        y=corr_matrix.columns,
        colorscale='Viridis',
        colorbar=dict(title='–ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è'),
        text=np.round(corr_matrix.values, 2),  # Add correlation values as text
        texttemplate="%{text}",  # Format the text to display
        hoverinfo="none"  # Disable hover info for cleaner display
    ))

    # Update layout for better visualization
    fig.update_layout(
        title='',
        xaxis=dict(title='Features'),
        yaxis=dict(title='Features'),
        width=600,
        height=600
    )
    st.plotly_chart(fig)
with tab3:
    # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ –ø–æ–¥—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ—Å–µ—â–µ–Ω–∏–π
    visits_by_day = df['day'].value_counts().sort_index()

    # –£–ø–æ—Ä—è–¥–æ—á–∏–≤–∞–µ–º –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    days_order = ['Thur', 'Fri', 'Sat', 'Sun']
    visits_by_day = visits_by_day.reindex(days_order)

    # –°–æ–∑–¥–∞–Ω–∏–µ –ª–∏–Ω–µ–π–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞
    fig = go.Figure()

    fig.add_trace(go.Scatter(
        x=visits_by_day.index,
        y=visits_by_day.values,
        mode='lines+markers',
        line=dict(color='blue'),
        name='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–µ—â–µ–Ω–∏–π'
    ))
    fig.update_layout(
        title_text="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–µ—â–µ–Ω–∏–π –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏",
        showlegend=True
    )
    st.plotly_chart(fig)
with tab4:

    fig = px.scatter(df, x='total_bill', y='tip', color='time',
                     color_discrete_map={'Dinner': 'green', 'Lunch': 'yellow'},
                     title='–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å —á–∞–µ–≤—ã—Ö –æ—Ç –æ–±—â–µ–≥–æ —Å—á–µ—Ç–∞')
    st.plotly_chart(fig)
with tab5:
    left, middle = st.columns(2)
    if left.button("–°—Ä–µ–¥–Ω–µ–µ —á–∞–µ–≤—ã—Ö –∑–∞ –æ–±–µ–¥/—É–∂–∏–Ω –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ –ø–æ–ª—É", icon="üíµ", use_container_width=True):
        # C—É–º–º—ã —á–∞–µ–≤—ã—Ö –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ –ø–æ–ª—É
        # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ –ø–æ–ª—É
        grouped = df.groupby(['day', 'sex'])['tip'].mean().reset_index()
        order = ['Thur', 'Fri', 'Sat', 'Sun']
        grouped['day'] = pd.Categorical(
            grouped['day'], categories=order, ordered=True)
        grouped = grouped.sort_values('day')

        # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Plotly
        fig2 = px.bar(grouped, x='day', y='tip', color='sex', barmode='overlay',
                      color_discrete_map={
                          'Female': 'deeppink', 'Male': 'darkblue'},
                      title='–°—Ä–µ–¥–Ω–µ–µ —á–∞–µ–≤—ã—Ö –∑–∞ –æ–±–µ–¥/—É–∂–∏–Ω –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ –ø–æ–ª—É',
                      labels={'day': '–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏', 'tip': 'C—Ä–µ–¥–Ω–µ–µ —á–∞–µ–≤—ã—Ö', 'sex': '–ü–æ–ª'})
        st.plotly_chart(fig2)
    if middle.button("–°—Ä–µ–¥–Ω–µ–µ —Å—É–º–º –∑–∞ –æ–±–µ–¥/—É–∂–∏–Ω –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ –ø–æ–ª—É", icon="üíµ", use_container_width=True):
        # C—É–º–º—ã —Ç—Ä–∞—Ç –∑–∞ –æ–±–µ–¥/—É–∂–∏–Ω –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ –ø–æ–ª—É
        # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ –ø–æ–ª—É
        grouped = df.groupby(['day', 'sex'])['total_bill'].mean().reset_index()
        order = ['Thur', 'Fri', 'Sat', 'Sun']
        grouped['day'] = pd.Categorical(
            grouped['day'], categories=order, ordered=True)
        grouped = grouped.sort_values('day')

        # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Plotly
        fig2 = px.bar(grouped, x='day', y='total_bill', color='sex', barmode='overlay',
                      color_discrete_map={
                          'Female': 'deeppink', 'Male': 'darkblue'},
                      title='–°—Ä–µ–¥–Ω–µ–µ —Å—É–º–º –∑–∞ –æ–±–µ–¥/—É–∂–∏–Ω –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ –ø–æ–ª—É',
                      labels={'day': '–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏', 'total_bill': '–°—Ä–µ–¥–Ω–µ–µ —Å—É–º–º', 'sex': '–ü–æ–ª'})
        st.plotly_chart(fig2)
    if left.button("–°—Ä–µ–¥–Ω–µ–µ —á–∞–µ–≤—ã—Ö –∑–∞ –æ–±–µ–¥/—É–∂–∏–Ω –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –¥–ª—è –∫—É—Ä—è—â–∏—Ö –∏ –Ω–µ –∫—É—Ä—è—â–∏—Ö", icon="üö¨", use_container_width=True):
        grouped = df.groupby(['day', 'smoker'])['tip'].mean().reset_index()
        # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Plotly
        fig2 = px.bar(grouped, x='day', y='tip', color='smoker', barmode='overlay',
                      color_discrete_map={
                          'Yes': 'deeppink', 'No': 'darkblue'},
                      title='–°—Ä–µ–¥–Ω–µ–µ —á–∞–µ–≤—ã—Ö –∑–∞ –æ–±–µ–¥/—É–∂–∏–Ω –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –¥–ª—è –∫—É—Ä—è—â–∏—Ö –∏ –Ω–µ –∫—É—Ä—è—â–∏—Ö',
                      labels={'day': '–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏', 'tip': '–°—Ä–µ–¥–Ω–µ–µ —á–∞–µ–≤—ã—Ö', 'smoker': '–ö—É—Ä–∏–ª—å—à–∏–∫'})
        st.plotly_chart(fig2)
    if middle.button("–°—Ä–µ–¥–Ω–µ–µ —Å—É–º–º –∑–∞ –æ–±–µ–¥/—É–∂–∏–Ω –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –¥–ª—è –∫—É—Ä—è—â–∏—Ö –∏ –Ω–µ –∫—É—Ä—è—â–∏—Ö", icon="üö¨", use_container_width=True):
        grouped = df.groupby(['day', 'smoker'])[
            'total_bill'].mean().reset_index()
        # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Plotly
        fig2 = px.bar(grouped, x='day', y='total_bill', color='smoker', barmode='overlay',
                      color_discrete_map={
                          'Yes': 'deeppink', 'No': 'darkblue'},
                      title='–°—Ä–µ–¥–Ω–µ–µ —Å—É–º–º –∑–∞ –æ–±–µ–¥/—É–∂–∏–Ω –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –¥–ª—è –∫—É—Ä—è—â–∏—Ö –∏ –Ω–µ –∫—É—Ä—è—â–∏—Ö',
                      labels={'day': '–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏', 'total_bill': '–°—Ä–µ–¥–Ω–µ–µ —Å—É–º–º', 'smoker': '–ö—É—Ä–∏–ª—å—à–∏–∫'})
        st.plotly_chart(fig2)

with tab6:
    # –°—É–º–º–∞ —á–∞–µ–≤—ã—Ö –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏ –∏ –ø–æ–ª—É
    # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏ –∏ –ø–æ–ª—É
    grouped = df.groupby(['time', 'sex']).sum().reset_index()

    # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Plotly
    fig2 = px.bar(grouped, x='time', y='tip', color='sex', barmode='overlay',
                  color_discrete_map={
                      'Female': 'deeppink', 'Male': 'darkblue'},
                  title='–°—É–º–º–∞ —á–∞–µ–≤—ã—Ö –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏ –∏ –ø–æ–ª—É',
                  labels={'time': '–í—Ä–µ–º—è –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏', 'tip': '–°—É–º–º–∞ —á–∞–µ–≤—ã—Ö', 'sex': '–ü–æ–ª'})
    st.plotly_chart(fig2)
with tab7:
    # st.header("–°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–∞–µ–≤—ã—Ö –º\–∂")
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
    day_order = ['Thur', 'Fri', 'Sat', 'Sun']

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç–æ–ª–±–µ—Ü 'day' –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã–π —Ç–∏–ø —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –ø–æ—Ä—è–¥–∫–∞
    df['day'] = pd.Categorical(df['day'], categories=day_order, ordered=True)
    # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ –ø–æ–ª—É, –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —á–∞–µ–≤—ã—Ö
    grouped_data = df.groupby(['day', 'sex'])['tip'].mean().reset_index()

    # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ª–∏–Ω–µ–π–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞ —Å –ø–æ–º–æ—â—å—é Plotly
    fig = px.line(
        grouped_data,  # –î–∞–Ω–Ω—ã–µ
        x='day',       # –û—Å—å X: –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏
        y='tip',       # –û—Å—å Y: —Å—Ä–µ–¥–Ω–∏–µ —á–∞–µ–≤—ã–µ
        color='sex',   # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø–æ–ª—É
        markers=True,  # –î–æ–±–∞–≤–∏—Ç—å –º–∞—Ä–∫–µ—Ä—ã
        title='–°—Ä–µ–¥–Ω–∏–µ —á–∞–µ–≤—ã–µ –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –¥–ª—è –º—É–∂—á–∏–Ω –∏ –∂–µ–Ω—â–∏–Ω',
        labels={'tip': '–°—Ä–µ–¥–Ω–∏–µ —á–∞–µ–≤—ã–µ', 'day': '–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏', 'sex': '–ü–æ–ª'},
        color_discrete_map={'Female': 'deeppink',
                            'Male': 'darkblue'}  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–æ–≤
    )

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    fig.update_layout(
        xaxis_title='–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏',
        yaxis_title='–°—Ä–µ–¥–Ω–∏–µ —á–∞–µ–≤—ã–µ',
        legend_title='–ü–æ–ª'
    )
    st.plotly_chart(fig)
with tab8:
    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö: –º—É–∂—á–∏–Ω—ã –∏ –∂–µ–Ω—â–∏–Ω—ã
    male_data = df[df['sex'] == 'Male']
    female_data = df[df['sex'] == 'Female']

    # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ —Å—Ç–∞—Ç—É—Å—É –∫—É—Ä–µ–Ω–∏—è –¥–ª—è –º—É–∂—á–∏–Ω –∏ –∂–µ–Ω—â–∏–Ω
    male_smoker_counts = male_data['smoker'].value_counts().reset_index()
    male_smoker_counts.columns = ['smoker', 'count']

    female_smoker_counts = female_data['smoker'].value_counts().reset_index()
    female_smoker_counts.columns = ['smoker', 'count']

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–≥—Ä–∞—Ñ–∏–∫–æ–≤
    fig = make_subplots(rows=1, cols=2, specs=[[{'type': 'pie'}, {'type': 'pie'}]],
                        subplot_titles=('–ú—É–∂—á–∏–Ω—ãüë¶', '–ñ–µ–Ω—â–∏–Ω—ãüë©‚Äçü¶∞'))

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫—Ä—É–≥–æ–≤–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã –¥–ª—è –º—É–∂—á–∏–Ω
    fig.add_trace(
        go.Pie(
            labels=male_smoker_counts['smoker'],
            values=male_smoker_counts['count'],
            name="–ú—É–∂—á–∏–Ω—ã",
            hole=0.3,
            textinfo='percent+label+value',
            marker=dict(colors=['#1f77b4', '#aec7e8'])  # –°–∏–Ω–∏–µ —Ç–æ–Ω–∞ –¥–ª—è –º—É–∂—á–∏–Ω
        ),
        row=1, col=1
    )

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫—Ä—É–≥–æ–≤–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã –¥–ª—è –∂–µ–Ω—â–∏–Ω
    fig.add_trace(
        go.Pie(
            labels=female_smoker_counts['smoker'],
            values=female_smoker_counts['count'],
            name="–ñ–µ–Ω—â–∏–Ω—ã",
            hole=0.3,
            textinfo='percent+label+value',
            marker=dict(colors=['#FF69B4', '#FFC0CB'])
        ),
        row=1, col=2
    )

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞–∫–µ—Ç–∞
    fig.update_layout(
        title_text="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫—É—Ä—è—â–∏—Ö –∏ –Ω–µ–∫—É—Ä—è—â–∏—Ö —Å—Ä–µ–¥–∏ –º—É–∂—á–∏–Ω –∏ –∂–µ–Ω—â–∏–Ω",
        showlegend=False
    )
    st.plotly_chart(fig)
