import streamlit as st
import plotly.express as px
import pandas as pd
import plotly.graph_objects as go
from plotly.subplots import make_subplots
import numpy as np


# Load dataset
df = px.data.tips()
df2 = pd.DataFrame(df)
st.title("–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö —á–∞–µ–≤—ã—Ö")

st.header("–ü—Ä–∏–º–µ—Ä –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
if st.checkbox("–ü–æ–∫–∞–∑–∞—Ç—å/–°–∫—Ä—ã—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ."):
    st.dataframe(df)
tab_titles = ["–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö", "–ö–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞",
              "–ì—Ä–∞—Ñ 1", "–ì—Ä–∞—Ñ 2", "–ì—Ä–∞—Ñ 3", "–ì—Ä–∞—Ñ 4", "–ì—Ä–∞—Ñ 5"]
tab1, tab2, tab3, tab4, tab5, tab6, tab7 = st.tabs(tab_titles)

with tab1:
    st.html(
        f"–ö–æ–ª-–≤–æ —Å—Ç—Ä–æ–∫ –≤ –±–∞–∑–µ Tips - <span style='color: green;'><i><u>{df.shape[0]}</u></i></span>")

    st.html(f"–ñ–µ–Ω—â–∏–Ω - <span style='color: green;'>{df[df['sex'] == "Female"]['sex'].count()}</span>, "
            f"–∏–∑ –Ω–∏—Ö –∫—É—Ä—è—Ç - <span style='color: green;'>{df[(df['sex'] == "Female") & (df['smoker'] == "Yes")]['sex'].count()}</span>. "
            f"–û–±—â–∞—è —Å—É–º–º–∞ —á–∞–µ–≤—ã—Ö - <span style='color: green;'>{df[df['sex'] == "Female"]['tip'].sum().round(2)}</span>.")

    st.html(f"–ú—É–∂—á–∏–Ω - <span style='color: green;'>{df[df['sex'] == "Male"]['sex'].count()}</span>, "
            f"–∏–∑ –Ω–∏—Ö –∫—É—Ä—è—Ç - <span style='color: green;'>{df[(df['sex'] == "Male") & (df['smoker'] == "Yes")]['sex'].count()}</span>. "
            f"–û–±—â–∞—è —Å—É–º–º–∞ —á–∞–µ–≤—ã—Ö - <span style='color: green;'>{df[df['sex'] == "Male"]['tip'].sum().round(2)}</span>.")
    st.html(
        f"–ö–æ–ª-–≤–æ –ø—É—Å—Ç—ã—Ö –ø–æ–ª–µ–π –≤ –±–∞–∑–µ - <span style='color: green;'>{df.isnull().sum()[0]}</span>.")
    st.write(df.describe())
with tab2:
    tips_numeric = df.copy()
    for col in tips_numeric.select_dtypes(include=['category', 'object']).columns:
        tips_numeric[col] = tips_numeric[col].astype('category').cat.codes

    # Compute the correlation matrix
    corr_matrix = tips_numeric.corr()

    # Create the heatmap using Plotly
    fig = go.Figure(data=go.Heatmap(
        z=corr_matrix.values,
        x=corr_matrix.columns,
        y=corr_matrix.columns,
        colorscale='Viridis',
        colorbar=dict(title='–ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è'),
        text=np.round(corr_matrix.values, 2),  # Add correlation values as text
        texttemplate="%{text}",  # Format the text to display
        hoverinfo="none"  # Disable hover info for cleaner display
    ))

    # Update layout for better visualization
    fig.update_layout(
        title='',
        xaxis=dict(title='Features'),
        yaxis=dict(title='Features'),
        width=600,
        height=600
    )
    st.plotly_chart(fig)
with tab3:

    fig = px.scatter(df, x='total_bill', y='tip', color='time',
                     color_discrete_map={'Dinner': 'green', 'Lunch': 'yellow'},
                     title='–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å —á–∞–µ–≤—ã—Ö –æ—Ç –æ–±—â–µ–≥–æ —Å—á–µ—Ç–∞')
    st.plotly_chart(fig)
with tab4:
    left, middle = st.columns(2)
    if left.button("C—É–º–º—ã —Ç—Ä–∞—Ç –Ω–∞ —á–∞–µ–≤—ã–µ –∑–∞ –æ–±–µ–¥/—É–∂–∏–Ω –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ –ø–æ–ª—É", icon="üíµ", use_container_width=True):
        # C—É–º–º—ã —á–∞–µ–≤—ã—Ö –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ –ø–æ–ª—É
        # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ –ø–æ–ª—É
        grouped = df.groupby(['day', 'sex']).sum().reset_index()
        order = ['Thur', 'Fri', 'Sat', 'Sun']
        grouped['day'] = pd.Categorical(
            grouped['day'], categories=order, ordered=True)
        grouped = grouped.sort_values('day')

        # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Plotly
        fig2 = px.bar(grouped, x='day', y='tip', color='sex', barmode='overlay',
                      color_discrete_map={
                          'Female': 'deeppink', 'Male': 'darkblue'},
                      title='C—É–º–º—ã —á–∞–µ–≤—ã—Ö –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ –ø–æ–ª—É',
                      labels={'day': '–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏', 'tip': '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞–µ–≤—ã—Ö', 'sex': '–ü–æ–ª'})
        st.plotly_chart(fig2)
    if middle.button("C—É–º–º—ã —Ç—Ä–∞—Ç –∑–∞ –æ–±–µ–¥/—É–∂–∏–Ω –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ –ø–æ–ª—É", icon="üíµ", use_container_width=True):
        # C—É–º–º—ã —Ç—Ä–∞—Ç –∑–∞ –æ–±–µ–¥/—É–∂–∏–Ω –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ –ø–æ–ª—É
        # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ –ø–æ–ª—É
        grouped = df.groupby(['day', 'sex']).sum().reset_index()
        order = ['Thur', 'Fri', 'Sat', 'Sun']
        grouped['day'] = pd.Categorical(
            grouped['day'], categories=order, ordered=True)
        grouped = grouped.sort_values('day')

        # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Plotly
        fig2 = px.bar(grouped, x='day', y='total_bill', color='sex', barmode='overlay',
                      color_discrete_map={
                          'Female': 'deeppink', 'Male': 'darkblue'},
                      title='C—É–º–º—ã —Ç—Ä–∞—Ç –∑–∞ –æ–±–µ–¥/—É–∂–∏–Ω –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ –ø–æ–ª—É',
                      labels={'day': '–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏', 'tip': '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞–µ–≤—ã—Ö', 'sex': '–ü–æ–ª'})
        st.plotly_chart(fig2)
with tab5:
    # –°—É–º–º–∞ —á–∞–µ–≤—ã—Ö –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏ –∏ –ø–æ–ª—É
    # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏ –∏ –ø–æ–ª—É
    grouped = df.groupby(['time', 'sex']).sum().reset_index()

    # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Plotly
    fig2 = px.bar(grouped, x='time', y='tip', color='sex', barmode='overlay',
                  color_discrete_map={
                      'Female': 'deeppink', 'Male': 'darkblue'},
                  title='–°—É–º–º–∞ —á–∞–µ–≤—ã—Ö –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏ –∏ –ø–æ–ª—É',
                  labels={'time': '–í—Ä–µ–º—è –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏', 'tip': '–°—É–º–º–∞ —á–∞–µ–≤—ã—Ö', 'sex': '–ü–æ–ª'})
    st.plotly_chart(fig2)
with tab6:
    # st.header("–°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–∞–µ–≤—ã—Ö –º\–∂")
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
    day_order = ['Thur', 'Fri', 'Sat', 'Sun']

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç–æ–ª–±–µ—Ü 'day' –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã–π —Ç–∏–ø —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –ø–æ—Ä—è–¥–∫–∞
    df['day'] = pd.Categorical(df['day'], categories=day_order, ordered=True)
    # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ –ø–æ–ª—É, –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —á–∞–µ–≤—ã—Ö
    grouped_data = df.groupby(['day', 'sex'])['tip'].mean().reset_index()

    # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ª–∏–Ω–µ–π–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞ —Å –ø–æ–º–æ—â—å—é Plotly
    fig = px.line(
        grouped_data,  # –î–∞–Ω–Ω—ã–µ
        x='day',       # –û—Å—å X: –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏
        y='tip',       # –û—Å—å Y: —Å—Ä–µ–¥–Ω–∏–µ —á–∞–µ–≤—ã–µ
        color='sex',   # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø–æ–ª—É
        markers=True,  # –î–æ–±–∞–≤–∏—Ç—å –º–∞—Ä–∫–µ—Ä—ã
        title='–°—Ä–µ–¥–Ω–∏–µ —á–∞–µ–≤—ã–µ –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –¥–ª—è –º—É–∂—á–∏–Ω –∏ –∂–µ–Ω—â–∏–Ω',
        labels={'tip': '–°—Ä–µ–¥–Ω–∏–µ —á–∞–µ–≤—ã–µ', 'day': '–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏', 'sex': '–ü–æ–ª'},
        color_discrete_map={'Female': 'deeppink',
                            'Male': 'darkblue'}  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–æ–≤
    )

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    fig.update_layout(
        xaxis_title='–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏',
        yaxis_title='–°—Ä–µ–¥–Ω–∏–µ —á–∞–µ–≤—ã–µ',
        legend_title='–ü–æ–ª'
    )
    st.plotly_chart(fig)
with tab7:
    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö: –º—É–∂—á–∏–Ω—ã –∏ –∂–µ–Ω—â–∏–Ω—ã
    male_data = df[df['sex'] == 'Male']
    female_data = df[df['sex'] == 'Female']

    # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ —Å—Ç–∞—Ç—É—Å—É –∫—É—Ä–µ–Ω–∏—è –¥–ª—è –º—É–∂—á–∏–Ω –∏ –∂–µ–Ω—â–∏–Ω
    male_smoker_counts = male_data['smoker'].value_counts().reset_index()
    male_smoker_counts.columns = ['smoker', 'count']

    female_smoker_counts = female_data['smoker'].value_counts().reset_index()
    female_smoker_counts.columns = ['smoker', 'count']

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–≥—Ä–∞—Ñ–∏–∫–æ–≤
    fig = make_subplots(rows=1, cols=2, specs=[[{'type': 'pie'}, {'type': 'pie'}]],
                        subplot_titles=('–ú—É–∂—á–∏–Ω—ã', '–ñ–µ–Ω—â–∏–Ω—ã'))

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫—Ä—É–≥–æ–≤–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã –¥–ª—è –º—É–∂—á–∏–Ω
    fig.add_trace(
        go.Pie(
            labels=male_smoker_counts['smoker'],
            values=male_smoker_counts['count'],
            name="–ú—É–∂—á–∏–Ω—ã",
            hole=0.3,
            textinfo='percent+label+value',
            marker=dict(colors=['#1f77b4', '#aec7e8'])  # –°–∏–Ω–∏–µ —Ç–æ–Ω–∞ –¥–ª—è –º—É–∂—á–∏–Ω
        ),
        row=1, col=1
    )

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫—Ä—É–≥–æ–≤–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã –¥–ª—è –∂–µ–Ω—â–∏–Ω
    fig.add_trace(
        go.Pie(
            labels=female_smoker_counts['smoker'],
            values=female_smoker_counts['count'],
            name="–ñ–µ–Ω—â–∏–Ω—ã",
            hole=0.3,
            textinfo='percent+label+value',
            marker=dict(colors=['#FF69B4', '#FFC0CB'])
        ),
        row=1, col=2
    )

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞–∫–µ—Ç–∞
    fig.update_layout(
        title_text="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫—É—Ä—è—â–∏—Ö –∏ –Ω–µ–∫—É—Ä—è—â–∏—Ö —Å—Ä–µ–¥–∏ –º—É–∂—á–∏–Ω –∏ –∂–µ–Ω—â–∏–Ω",
        showlegend=False
    )
    st.plotly_chart(fig)
