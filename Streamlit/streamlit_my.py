import streamlit as st
import plotly.express as px
import pandas as pd
import plotly.graph_objects as go
import numpy as np

# Load dataset
df = px.data.tips()
df2 = pd.DataFrame(df)
st.title("–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö —á–∞–µ–≤—ã—Ö")

st.header("–ü—Ä–∏–º–µ—Ä –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
if st.checkbox("–ü–æ–∫–∞–∑–∞—Ç—å/–°–∫—Ä—ã—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ."):
    st.table(df)
tab_titles = ["–ö–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞", "–ì—Ä–∞—Ñ–∏–∫ 1", "–ì—Ä–∞—Ñ–∏–∫ 2", "–ì—Ä–∞—Ñ–∏–∫ 3", "–ì—Ä–∞—Ñ–∏–∫ 5"]
tab1, tab2, tab3, tab4, tab5 = st.tabs(tab_titles)


with tab1:
    tips_numeric = df.copy()
    for col in tips_numeric.select_dtypes(include=['category', 'object']).columns:
        tips_numeric[col] = tips_numeric[col].astype('category').cat.codes

    # Compute the correlation matrix
    corr_matrix = tips_numeric.corr()

    # Create the heatmap using Plotly
    fig = go.Figure(data=go.Heatmap(
        z=corr_matrix.values,
        x=corr_matrix.columns,
        y=corr_matrix.columns,
        colorscale='Viridis',
        colorbar=dict(title='–ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è'),
        text=np.round(corr_matrix.values, 2),  # Add correlation values as text
        texttemplate="%{text}",  # Format the text to display
        hoverinfo="none"  # Disable hover info for cleaner display
    ))

    # Update layout for better visualization
    fig.update_layout(
        title='',
        xaxis=dict(title='Features'),
        yaxis=dict(title='Features'),
        width=600,
        height=600
    )
    st.plotly_chart(fig)
with tab2:

    # Dropdowns for selecting X and Y axes
    x_axis = st.selectbox("Select X-axis:", df.columns[:-1])
    y_axis = st.selectbox("Select Y-axis:", df.columns[:-1])

    # Create a scatter plot
    fig = px.scatter(df, x=x_axis, y=y_axis, color="sex", title="–ß–∞–µ–≤—ã–µ")

    # Display the splot
    st.plotly_chart(fig)
with tab3:
    st.header("–ö–æ–ª-–≤–æ —á–∞–µ–≤—ã—Ö –º\–∂ –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏")
    # Histogram: Life Expectancy Distribution
    st.subheader("üìà –ß–∞–µ–≤—ã–µ")
    fig2 = px.histogram(df, x="day", nbins=30, color="sex", barmode="overlay",
                        color_discrete_map={'Female': 'deeppink', 'Male': 'darkblue'})
    st.plotly_chart(fig2)
with tab4:
    st.header("–ö–æ–ª-–≤–æ —á–∞–µ–≤—ã—Ö –º\–∂ –ø–æ –û–±–µ–¥—É, –£–∂–∏–Ω—É")
    # Histogram: Life Expectancy Distribution
    st.subheader("üìà –ß–∞–µ–≤—ã–µ")
    fig2 = px.histogram(df, x="time", nbins=30, color="sex", barmode="overlay",
                        color_discrete_map={'Female': 'deeppink', 'Male': 'darkblue'})
    st.plotly_chart(fig2)
with tab5:
    st.header("–°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–∞–µ–≤—ã—Ö –º\–∂")
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
    day_order = ['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun']

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç–æ–ª–±–µ—Ü 'day' –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã–π —Ç–∏–ø —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –ø–æ—Ä—è–¥–∫–∞
    df['day'] = pd.Categorical(df['day'], categories=day_order, ordered=True)
    # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ –ø–æ–ª—É, –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —á–∞–µ–≤—ã—Ö
    grouped_data = df.groupby(['day', 'sex'])['tip'].mean().reset_index()

    # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ª–∏–Ω–µ–π–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞ —Å –ø–æ–º–æ—â—å—é Plotly
    fig = px.line(
        grouped_data,  # –î–∞–Ω–Ω—ã–µ
        x='day',       # –û—Å—å X: –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏
        y='tip',       # –û—Å—å Y: —Å—Ä–µ–¥–Ω–∏–µ —á–∞–µ–≤—ã–µ
        color='sex',   # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø–æ–ª—É
        markers=True,  # –î–æ–±–∞–≤–∏—Ç—å –º–∞—Ä–∫–µ—Ä—ã
        title='–°—Ä–µ–¥–Ω–∏–µ —á–∞–µ–≤—ã–µ –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –¥–ª—è –º—É–∂—á–∏–Ω –∏ –∂–µ–Ω—â–∏–Ω',
        labels={'tip': '–°—Ä–µ–¥–Ω–∏–µ —á–∞–µ–≤—ã–µ', 'day': '–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏', 'sex': '–ü–æ–ª'},
        color_discrete_map={'Female': 'deeppink', 'Male': 'darkblue'}  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–æ–≤
    )

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    fig.update_layout(
        xaxis_title='–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏',
        yaxis_title='–°—Ä–µ–¥–Ω–∏–µ —á–∞–µ–≤—ã–µ',
        legend_title='–ü–æ–ª'
    )
    st.plotly_chart(fig)
